#!/bin/bash

function chroot_run()
{
    eval -- arch-chroot "${ROOTFS_DIR}" "${RUN_CMD}"
}

function run_once()
{
    if [[ ! -e "${WORK_DIR}/build.${1}" ]]; then
        "$1"
        msg_info "执行 '$1'"
        touch "${WORK_DIR}/build.${1}"
    fi
}

# 输出信息
function msg_info() 
{
    local _msg="${1}"
    if [[ ${APP_NAME} == '' ]]; then
        printf '\033[32m%s\033[0m\n' "${_msg}" | sed ':label;N;s/\n/ /g;b label' | sed 's/[ ][ ]*/ /g'
    else
        printf '\033[32m[%s]: %s\033[0m\n' "${APP_NAME}" "${_msg}" | sed ':label;N;s/\n/ /g;b label' | sed 's/[ ][ ]*/ /g'
    fi
}

# 输出信息
function msg_info_pure() 
{
    local _msg="${1}"
    printf '\033[32m%s\033[0m\n' "${_msg}" 
}

# 输出警告
function msg_warning()
{
    local _msg="${1}"
    if [[ ${APP_NAME} == '' ]]; then
        printf '\033[33m警告: %s\033[0m\n' "${_msg}" >&2
    else
        printf '\033[33m[%s] 警告: %s\033[0m\n' "${APP_NAME}" "${_msg}" >&2
    fi
}

# 输出错误
function msg_error()
{
    local _msg="${1}"
    local _error="${2}"
    if [[ ${APP_NAME} == '' ]]; then
        printf '\033[31m错误: %s\033[0m\n' "${_msg}" >&2
    else
        printf '\033[31m[%s] 错误: %s\033[0m\n' "${APP_NAME}" "${_msg}" >&2
    fi

    if (( _error > 0 )); then
        exit "${_error}"
    fi
}

